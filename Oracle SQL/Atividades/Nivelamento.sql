CREATE TABLE usuarioz (
       codigo    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
       nome      VARCHAR2(20),
       sobrenome VARCHAR2(20),
       cidade    VARCHAR2(20)
);

-- Renomear tabela
ALTER TABLE usuarioz RENAME TO usuarios;

-- Remover coluna sobrenome
ALTER TABLE usuarios DROP COLUMN sobrenome;

-- Adicionar coluna do tipo DATE "Nascimento"
ALTER TABLE usuarios ADD ( nascimento DATE );

-- Adicionar chave primária ao atributo "código" 
ALTER TABLE usuarios ADD ( CONSTRAINT codigo_pk PRIMARY KEY(codigo) );

-- Adicionar uma sequencia numérica ao atributo "código"
-- CREATE SEQUENCE codigo_pk START WITH 1; [NÃO FUNCIONANDO]

-- Inserir dados de uma pessoa
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Alice', 'Joinville', TO_DATE('2006/01/28', 'yyyy/mm/dd'));

-- Select de toda a tabela
SELECT * FROM usuarios;

-- Inserindo várias informações
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Larissa', 'Curitiba', '14-07-1989');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Júlio', 'Blumenau', '04-03-1992');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Marcelo', 'Blumenau', '15-04-1988');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Natália', 'Florianópolis', '02-12-1994');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Caio', 'São Paulo', '29-09-1984');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Luan', 'Rio de Janeiro', '30-09-1997');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Paloma', 'Florianópolis', '18-07-1993');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Olívia', 'Brusque', '22-10-1996');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Victor', 'Campinas', '09-02-2001');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Tatiana', 'São Paulo', '04-02-1990');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Rebeca', 'Curitiba', '31-12-1987');
INSERT INTO usuarios (nome, cidade, nascimento) VALUES ('Neila', 'Brasília', '09-03-1983');


-- Mostrar todos os registros (com todos os campos)
SELECT * FROM usuarios;

-- Selecionar todos os registros com a cidade "Blumenau"
SELECT * FROM usuarios WHERE (usuarios.cidade = 'Blumenau');

-- Listar por ordem alfabética
SELECT * FROM usuarios ORDER BY nome;

-- Listar por ordem alfabética ao contrária
SELECT * FROM usuarios ORDER BY nome DESC;

-- Listar registros com ano maior que 2000
SELECT * FROM usuarios WHERE ( EXTRACT(YEAR FROM nascimento) >= 2000 );

-- Listar todas as cidades sem repetição
SELECT DISTINCT cidade FROM usuarios;

-- Listar todas as cidade sem repetição, junto com quantas pessoas estão cadastradas nela
SELECT COUNT(*), cidade FROM usuarios GROUP BY cidade;

-- Listar todas as pessoas com 30 anos ou mais
SELECT nome, nascimento, (EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(nascimento))) AS idade 
FROM usuarios 
WHERE (EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM nascimento)) >= 30;

-- Listar todas as pessoas que tenha 'L' no nome
SELECT nome FROM usuarios WHERE (nome LIKE '%L%') or (nome LIKE '%l%');

-- Listar todas as pessoas que o nome comece com 'N'
SELECT nome FROM usuarios WHERE (nome LIKE 'N%') OR (nome LIKE 'n%');

-- Listar todas as pessoas cuja idade está entre 20 e 30 anos
SELECT codigo, nome, cidade, nascimento, (EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(nascimento))) AS idade 
FROM usuarios
WHERE (EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(nascimento))) BETWEEN 20 AND 30;

-- Mudar todos os registros com Brusque para Blumenau
UPDATE usuarios SET cidade = 'Blumenau' WHERE cidade = 'Brusque';

-- Mostrar quem é maior de idade e quem não é maior de idade
SELECT nome,
       (EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(nascimento))) AS idade,
       (CASE WHEN EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(nascimento)) >= 18 THEN 'Maior de idade' ELSE 'Menor de idade' END ) as situação
FROM usuarios;

-- Mostrar quantidade de pessoas que nasceram no mês de setembro
SELECT COUNT(*), 'Setembro' AS Mês FROM usuarios WHERE EXTRACT(MONTH FROM nascimento) = 9;

-- Soma das idades
SELECT SUM(EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(nascimento))) AS Soma_das_idades from usuarios;

-- Listar todos os registros cuja cidade for 'Curitiba' ou 'Florianópilis'
SELECT * FROM usuarios WHERE cidade IN ('Curitiba', 'Florianópolis');

-- Deletar todos os registros cuja cidade for 'Blumenau'
DELETE FROM usuarios WHERE cidade = 'Blumenau';

-- Deletar a tablea
DROP TABLE usuarios;
